#include <iostream>
#include <vector>
#include <string>

using namespace std;

class Task {
public:
    string description;
    bool completed;

    Task(const string& desc) : description(desc), completed(false) {}
};

class ToDoList {
private:
    vector<Task> tasks;

public:
    void addTask(const string& task) {
        tasks.emplace_back(task);
        cout << "Added task: " << task << endl;
    }

    void markCompleted(int taskNumber) {
        if (taskNumber >= 0 && taskNumber < tasks.size()) {
            tasks[taskNumber].completed = true;
            cout << "Marked task " << taskNumber << " as completed." << endl;
        } else {
            cout << "Invalid task number." << endl;
        }
    }

    void viewTasks() {
        if (tasks.empty()) {
            cout << "No tasks in the list." << endl;
            return;
        }

        for (size_t i = 0; i < tasks.size(); ++i) {
            cout << i << ". " << tasks[i].description << " - " 
                 << (tasks[i].completed ? "Done" : "Not Done") << endl;
        }
    }
};

void displayMenu() {
    cout << "\nTo-Do List Application" << endl;
    cout << "1. Add Task" << endl;
    cout << "2. Mark Task as Completed" << endl;
    cout << "3. View Tasks" << endl;
    cout << "4. Exit" << endl;
    cout << "Enter your choice: ";
}

int main() {
    ToDoList todoList;
    int choice;

    while (true) {
        displayMenu();
        cin >> choice;

        if (choice == 1) {
            cin.ignore(); // to ignore the newline character left in the buffer
            string task;
            cout << "Enter the task: ";
            getline(cin, task);
            todoList.addTask(task);
        } else if (choice == 2) {
            int taskNumber;
            cout << "Enter the task number to mark as completed: ";
            cin >> taskNumber;
            todoList.markCompleted(taskNumber);
        } else if (choice == 3) {
            todoList.viewTasks();
        } else if (choice == 4) {
            cout << "Exiting the application." << endl;
            break;
        } else {
            cout << "Invalid choice. Please try again." << endl;
        }
    }

    return 0;
}
